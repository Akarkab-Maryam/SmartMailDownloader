import imaplib
import email
from email.header import decode_header
import os
import re

# Identifiants
username = "maryama@maneoreseaux.com"
password = "gyww mccm gwml buod"
code_racine = "U502574"  #folder sherache"
download_base = "C:/Users/maryam/Downloads/teste"

# Connexion
mail = imaplib.IMAP4_SSL("imap.gmail.com")
mail.login(username, password)
print("‚úÖ Connexion r√©ussie")

# select label
mail.select('"Retours terrain"', readonly=True)
print("üìÇ Label 'Retours terrain' s√©lectionn√©")

# Recherche de tous les mails contenant le code racine
status, messages = mail.search(None, f'(SUBJECT "{code_racine}")')

if status != "OK":
    print("‚ùå Erreur lors de la recherche.")
else:
    email_ids = messages[0].split()
    print(f"üîç {len(email_ids)} mail(s) contenant '{code_racine}' trouv√©(s)")

    for num in email_ids:
        res, msg_data = mail.fetch(num, "(RFC822)")
        if res != "OK":
            print("‚ö†Ô∏è Erreur de r√©cup√©ration du mail.")
            continue

        msg = email.message_from_bytes(msg_data[0][1])
        subject = decode_header(msg["Subject"])[0][0]
        if isinstance(subject, bytes):
            subject = subject.decode()

        # Extraction du uo (ex: U123456-1)
        match = re.search(rf'({code_racine}-\d+)', subject)
        if not match:
            print(f"‚ùå Aucun code complet trouv√© dans : {subject}")
            continue

        code_complet = match.group(1)
        print(f"üìÅ Cr√©ation dossier : {code_complet}")

        # Cr√©ation du dossier
        dossier_courant = os.path.join(download_base, code_complet)
        os.makedirs(dossier_courant, exist_ok=True)

        # R√©cup√©ration des pi√®ces jointes
        for part in msg.walk():
            if part.get_content_maintype() == "multipart":
                continue
            if part.get("Content-Disposition") is None:
                continue

            filename = part.get_filename()
            if filename:
                filename = decode_header(filename)[0][0]
                if isinstance(filename, bytes):
                    filename = filename.decode()

                filepath = os.path.join(dossier_courant, filename)

                if not os.path.exists(filepath):
                    with open(filepath, "wb") as f:
                        f.write(part.get_payload(decode=True))
                    print(f"üìé Pi√®ce jointe t√©l√©charg√©e : {filepath}")
                else:
                    print(f"‚úÖ D√©j√† existante : {filepath}")

mail.logout()
print("‚úÖ T√©l√©chargement termin√©.")
